import socket
import tqdm
import os
from picamera import PiCamera
from time import sleep
from zipfile import ZipFile

camera = PiCamera()
pictureamount = 20

for i in range(pictureamount):
    sleep(2)
    camera.capture('/home/pi/Desktop/image%s.jpg' % i)


zipObj = ZipFile('Picturebatch.zip', 'w')
# Add multiple files to the zip
for i in range(pictureamount):
    zipObj.write('/home/pi/Desktop/image%s.jpg' % i)
# close the Zip File
zipObj.close()

for i in range(pictureamount):
    os.remove('/home/pi/Desktop/image%s.jpg' % i) 




SEPARATOR = "<SEPARATOR>"
BUFFER_SIZE = 4096 # send 4096 bytes each time step 

# the ip address or hostname of the server, the receiver
host = "192.168.2.42"  
# the port, let's use 5001
port = 5001
# the name of file we want to send, make sure it exists
filename = "Picturebatch.zip"# start sending the file

filesize = os.path.getsize(filename)
# create the client socket
s = socket.socket()

print(f"[+] Connecting to {host}:{port}")
s.connect((host, port))
print("[+] Connected.")
# send the filename and filesize
s.send(f"{filename}{SEPARATOR}{filesize}".encode())

progress = tqdm.tqdm(range(filesize), f"Sending {filename}", unit="B", unit_scale=True, unit_divisor=1024)
with open(filename, "rb") as f:
    while True:
        # read the bytes from the file
        bytes_read = f.read(BUFFER_SIZE)
        if not bytes_read:
            # file transmitting is done
            break
        # we use sendall to assure transimission in 
        # busy networks
        s.sendall(bytes_read)
        # update the progress bar
        progress.update(len(bytes_read))
# close the socket
s.close()

